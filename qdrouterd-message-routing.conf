##
## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##   http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License
##

# See the qdrouterd.conf (5) manual page for information about this
# file's format and options.

container {
    workerThreads: 4
    containerName: FIXMLDispatch
    saslConfigPath: /home/vagrant/fixml/sasl/
    saslConfigName: qdrouter
}

router {
    mode: standalone
    routerId: Router.A
}

listener {
    addr: 0.0.0.0
    port: amqp
    authenticatePeer: yes
    saslMechanisms: PLAIN DIGEST-MD5 CRAM-MD5
}

##########
##########
#
# FIXML - ABCFR connection
#
##########
##########

sslProfile {
    name: ABCFR_profile
    certDb: /home/vagrant/fixml/cbgc01.crt
    certFile: /home/vagrant/fixml/ABCFR_ABCFRALMMACC1.crt
    keyFile: /home/vagrant/fixml/ABCFR_ABCFRALMMACC1.pem
    passwordFile: /home/vagrant/fixml/passwd
}

connector {
    sslProfile: ABCFR_profile
    addr: cbgc01.xeop.de
    name: ABCFR_connector
    port: 19700
    role: route-container
    saslMechanisms: EXTERNAL
    allowRedirect: no
    idleTimeoutSeconds: 0
}

address {
    prefix: broadcast.ABCFR_ABCFRALMMACC1
    waypoint: yes
}

autoLink {
    addr: broadcast.ABCFR_ABCFRALMMACC1.TradeConfirmation
    dir: in
    connection: ABCFR_connector
}

autoLink {
    addr: broadcast.ABCFR_ABCFRALMMACC1.TradeConfirmationNCM
    dir: in
    connection: ABCFR_connector
}

autoLink {
    addr: broadcast.ABCFR_ABCFRALMMACC1.Workflow
    dir: in
    connection: ABCFR_connector
}

autoLink {
    addr: broadcast.ABCFR_ABCFRALMMACC1.WorkflowNCM
    dir: in
    connection: ABCFR_connector
}

autoLink {
    addr: broadcast.ABCFR_ABCFRALMMACC1.CollateralTransaction
    dir: in
    connection: ABCFR_connector
}

autoLink {
    addr: broadcast.ABCFR_ABCFRALMMACC1.Public
    dir: in
    connection: ABCFR_connector
}

address {
    prefix: request.ABCFR_ABCFRALMMACC1
    waypoint: yes
}

autoLink {
    addr: request.ABCFR_ABCFRALMMACC1
    dir: out
    connection: ABCFR_connector
}

address {
    prefix: response.ABCFR_ABCFRALMMACC1
    waypoint: yes
}

autoLink {
    addr: response.ABCFR_ABCFRALMMACC1
    dir: in
    connection: ABCFR_connector
}

#linkRoute {
#    prefix: broadcast.ABCFR_ABCFRALMMACC1.
#    dir: out
#    connection: ABCFR_connector
#}

##########
##########
#
# FIXML - DEFFR connection
#
##########
##########

sslProfile {
    name: DEFFR_profile
    certDb: /home/vagrant/fixml/cbgc01.crt
    certFile: /home/vagrant/fixml/DEFFR_DEFFRALMMACC1.crt
    keyFile: /home/vagrant/fixml/DEFFR_DEFFRALMMACC1.pem
    passwordFile: /home/vagrant/fixml/passwd
}

connector {
    sslProfile: DEFFR_profile
    addr: 172.16.153.11
    name: DEFFR_connector
    port: 19700
    role: route-container
    saslMechanisms: EXTERNAL
    allowRedirect: no
    idleTimeoutSeconds: 0
}

address {
    prefix: broadcast.DEFFR_DEFFRALMMACC1
    waypoint: yes
}

autoLink {
    addr: broadcast.DEFFR_DEFFRALMMACC1.TradeConfirmation
    dir: in
    connection: DEFFR_connector
}

autoLink {
    addr: broadcast.DEFFR_DEFFRALMMACC1.Workflow
    dir: in
    connection: DEFFR_connector
}
autoLink {
    addr: broadcast.DEFFR_DEFFRALMMACC1.Public
    dir: in
    connection: DEFFR_connector
}

address {
    prefix: request.DEFFR_DEFFRALMMACC1
    waypoint: yes
}

autoLink {
    addr: request.DEFFR_DEFFRALMMACC1
    dir: out
    connection: DEFFR_connector
}

address {
    prefix: response.DEFFR_DEFFRALMMACC1
    waypoint: yes
}

autoLink {
    addr: response.DEFFR_DEFFRALMMACC1
    dir: in
    connection: DEFFR_connector
}

log {
     module: DEFAULT 
     enable: debug+
     timestamp: true
}
